---
# MinIO Secret for credentials
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  labels:
    app: minio
type: Opaque
data:
  root-user: YWRtaW4K  # base64 encoded "minioadmin" bWluaW9hZG1pbg==
  root-password: TWluaW9AMjAxNgo=  # base64 encoded "minioadmin"

---
# MinIO PersistentVolumeClaim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  labels:
    app: minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: gp3  # Adjust based on your cluster's storage classes

---
# MinIO Service
apiVersion: v1
kind: Service
metadata:
  name: minio
  labels:
    app: minio
spec:
  ports:
    - port: 9000
      targetPort: 9000
      protocol: TCP
      name: api
    - port: 9001
      targetPort: 9001
      protocol: TCP
      name: console
  selector:
    app: minio
  type: ClusterIP

---
# MinIO Route for API
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: minio-api
  labels:
    app: minio
spec:
  to:
    kind: Service
    name: minio
    weight: 100
  port:
    targetPort: api
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect

---
# MinIO Route for Console
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: minio-console
  labels:
    app: minio
spec:
  to:
    kind: Service
    name: minio
    weight: 100
  port:
    targetPort: console
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect

---
# MinIO Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio-pvc
      containers:
        - name: minio
          image: quay.io/minio/minio:latest
          command:
            - /bin/sh
            - -c
          args:
            - mkdir -p /data/models && minio server /data --console-address ":9001"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: root-password
          ports:
            - containerPort: 9000
            - containerPort: 9001
          volumeMounts:
            - name: data
              mountPath: "/data"
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
